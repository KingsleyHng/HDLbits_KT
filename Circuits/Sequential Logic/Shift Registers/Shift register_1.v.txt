module top_module (
    input [3:0] SW,
    input [3:0] KEY,
    output [3:0] LEDR
); //
    wire[3:0] q_tmp;
    MUXDFF uut1 (.clk(KEY[0]), .w(KEY[3]), .R(SW[3]), .E(KEY[1]), .L(KEY[2]), .Q(LEDR[3]));
    MUXDFF uut2 (.clk(KEY[0]), .w(LEDR[3]), .R(SW[2]), .E(KEY[1]), .L(KEY[2]), .Q(LEDR[2]));    
    MUXDFF uut3 (.clk(KEY[0]), .w(LEDR[2]), .R(SW[1]), .E(KEY[1]), .L(KEY[2]), .Q(LEDR[1]));    
    MUXDFF uut4 (.clk(KEY[0]), .w(LEDR[1]), .R(SW[0]), .E(KEY[1]), .L(KEY[2]), .Q(LEDR[0]));    
    
endmodule

module MUXDFF (
    input clk,
    input w, R, E, L,
    output Q
);
    wire w1, w2;
    assign w1 = E ? w : Q;
    
    assign w2 = L ? R : w1;
    
    always@(posedge clk) begin
       Q <= w2;   
    end
    
endmodule

