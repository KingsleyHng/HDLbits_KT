module top_module (
    input clk,
    input x,
    output z
); 
	wire o_xor, i_nor1;
    wire o_and, i_nor2;
    wire o_or, i_nor3, i_or;
    
    DFF FF1 (.clk(clk), .d(o_xor), .q(i_nor1));
    DFF FF2 (.clk(clk), .d(o_and), .q(i_nor2));
    DFF FF3 (.clk(clk), .d(o_or), .q(i_nor3) /*.q_n(i_or)*/);
    
    assign o_xor = x ^ i_nor1;
    assign o_and = x & ~i_nor2;
    assign o_or =  x | ~i_nor3;
    assign z = ~ (i_nor1 | i_nor2 | i_nor3);
 
endmodule

module DFF ( input d, input clk, output reg q, output q_n) ;

    reg reset = 1;
 
    always@(posedge clk) begin
        if (reset) begin
           q <= 0;
           reset <= 0;
        end
        
        else begin
           q <= d;
        end
    end 
    
     assign q_n = ~q;
       
endmodule