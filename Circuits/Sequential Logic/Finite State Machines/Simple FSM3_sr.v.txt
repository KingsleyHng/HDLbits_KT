module top_module(
    input clk,
    input in,
    input reset,
    output out); //

   parameter A = 0;
    parameter B = 1;
    parameter C = 2;
    parameter D = 3;
    reg[1:0] current_state, next_state;
    
    
    always@(*) begin
        case(current_state)
            A:if(in) next_state = B;
              else next_state = A;
            B:if(in) next_state = B;
              else next_state = C;            
            C:if(in) next_state = D;
              else next_state = A;            
            D:if(in) next_state = B;
              else next_state = C;           
        endcase
    end
    
    always@(posedge clk ) begin
        if(reset) begin
           current_state <= A; 
        end
        else begin
           current_state <= next_state; 
        end
        
    end
    
    assign out = (current_state == D);
    // State flip-flops with asynchronous reset

    // Output logic


endmodule
